//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Asphalt_9_Materials.ViewModel.Entities
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class Asphalt9Entities : DbContext
    {
        public Asphalt9Entities()
            : base("name=Asphalt9Entities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Blueprint> Blueprints { get; set; }
        public virtual DbSet<Career> Careers { get; set; }
        public virtual DbSet<EpicPart> EpicParts { get; set; }
        public virtual DbSet<Grande> Grandes { get; set; }
        public virtual DbSet<MaxDetail> MaxDetails { get; set; }
        public virtual DbSet<RarePart> RareParts { get; set; }
        public virtual DbSet<RouteTrack> RouteTracks { get; set; }
        public virtual DbSet<StarRank> StarRanks { get; set; }
        public virtual DbSet<StockDetail> StockDetails { get; set; }
        public virtual DbSet<UncommonPart> UncommonParts { get; set; }
        public virtual DbSet<Upgrade> Upgrades { get; set; }
    
        public virtual ObjectResult<AddCar_Result> AddCar(string carname)
        {
            var carnameParameter = carname != null ?
                new ObjectParameter("carname", carname) :
                new ObjectParameter("carname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AddCar_Result>("AddCar", carnameParameter);
        }
    
        public virtual ObjectResult<AddCars_Result> AddCars(string @class, Nullable<bool> isClass)
        {
            var classParameter = @class != null ?
                new ObjectParameter("class", @class) :
                new ObjectParameter("class", typeof(string));
    
            var isClassParameter = isClass.HasValue ?
                new ObjectParameter("isClass", isClass) :
                new ObjectParameter("isClass", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AddCars_Result>("AddCars", classParameter, isClassParameter);
        }
    
        public virtual ObjectResult<AddChapters_Result> AddChapters(Nullable<int> chapter, Nullable<bool> isChapter)
        {
            var chapterParameter = chapter.HasValue ?
                new ObjectParameter("chapter", chapter) :
                new ObjectParameter("chapter", typeof(int));
    
            var isChapterParameter = isChapter.HasValue ?
                new ObjectParameter("isChapter", isChapter) :
                new ObjectParameter("isChapter", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AddChapters_Result>("AddChapters", chapterParameter, isChapterParameter);
        }
    }
}
